package com.example.pebble12;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;


import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.ContentUris;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.CalendarContract;
import android.provider.CalendarContract.Calendars;
import android.provider.CalendarContract.Instances;
import android.util.Log;
import android.view.Menu;
import java.util.Date;


public class CatchChangesReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
    // add processing here with some query to content provider
        // in my project I use this selection for getting events:
    	
    	
    	Uri.Builder eventsUriBuilder = CalendarContract.Instances.CONTENT_URI
                .buildUpon();
    	String[] projection = 
    		      new String[]{
    		            Instances.START_DAY,
    		            Instances.END_DAY,
    		            Instances.START_MINUTE,
    		            Instances.END_MINUTE,
    		            CalendarContract.Events.TITLE,
    		            CalendarContract.Events.DESCRIPTION
    		          	};
    		
    		Uri.Builder builder = Instances.CONTENT_URI.buildUpon();
    		long now = new Date().getTime();
    		ContentUris.appendId(builder, now);
    		ContentUris.appendId(builder, now + MainActivity.TWENTY_FOUR_HOURS_IN_MILLISECONDS);
    		//DateUtils.WEEK_IN_MILLIS
    	
    		Cursor calCursor = 
    		      getContentResolver().
    		            query(builder.build(), 
    		                  projection, 
    		                  Calendars.VISIBLE + " = 1", 
    		                  null, 
    		                 "startDay ASC, startMinute ASC");//Calendars._ID + " ASC");
    		if (calCursor.moveToFirst()) {
    		   do {
    		      int startDay = calCursor.getInt(0);
    		      int endDay = calCursor.getInt(1);
    		      int startMinute = calCursor.getInt(2); //minutes from midnight
    		      int endMinute = calCursor.getInt(3); //minutes from midnight
    		      String title = calCursor.getString(4);
    		      String description = calCursor.getString(5);
    		   }  while (calCursor.moveToNext());  
    		}
    		      
         final String SELECTION = CalendarContract.Events.CALENDAR_ID + "="
            + calendarId + " AND " + "("
            + CalendarContract.Events.DIRTY + "=" + 1 + " OR "
            + CalendarContract.Events.DELETED + "=" + 1 + ")" + " AND "
            + CalendarContract.Events.DTEND + " > "
            + Calendar.getInstance().getTimeInMillis();
    }
}
