package com.example.pebble12;

import java.util.HashSet;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;


public class CatchChangesReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
    // add processing here with some query to content provider
        // in my project I use this selection for getting events:
    	
    	Log.d("com.example.pebble","WE GOT A CALENDAR CHANGE");
    	HashSet<Event> newEvents = MainActivity.getEventsNext24Hours();
    	
    	//TAKES O(2n) time, rather than O(1)
    	for (Event e : MainActivity.events){
    		if (!newEvents.contains(e)) {
        		Log.d(MainActivity.TAG,"Removed event:" + e.title);
        		//SIGNAL TO PEBBLE
    		}
    	}
    	
    	for (Event e : newEvents) {
    		if (!MainActivity.events.contains(e)) {
        		Log.d(MainActivity.TAG,"Added event:" + e.title);
        		//SIGNAL TO PEBBLE
    		}
    	}
    	MainActivity.events = newEvents;
    	
//    	Uri.Builder eventsUriBuilder = CalendarContract.Instances.CONTENT_URI
//                .buildUpon();
//    	String[] projection = 
//    		      new String[]{
//    		            Instances.START_DAY,
//    		            Instances.END_DAY,
//    		            Instances.START_MINUTE,
//    		            Instances.END_MINUTE,
//    		            CalendarContract.Events.TITLE,
//    		            CalendarContract.Events.DESCRIPTION
//    		          	};
//    		
//    		Uri.Builder builder = Instances.CONTENT_URI.buildUpon();
//    		long now = new Date().getTime();
//    		ContentUris.appendId(builder, now);
//    		ContentUris.appendId(builder, now + MainActivity.TWENTY_FOUR_HOURS_IN_MILLISECONDS);
//    		
//    		final String SELECTION = CalendarContract.Events.DIRTY + "=" + 1 + " OR "
//    	            + CalendarContract.Events.DELETED + "=" + 1 + ")";
//    	
//    		Cursor calCursor = 
//    		      context.getContentResolver().
//    		            query(builder.build(), 
//    		                  projection, 
//    		                  Calendars.VISIBLE + " = 1 AND (" + SELECTION, 
//    		                  null, 
//    		                 "startDay ASC, startMinute ASC");
//    		if (calCursor.moveToFirst()) {
//    		   do {
//    		      int startDay = calCursor.getInt(0);
//    		      int endDay = calCursor.getInt(1);
//    		      int startMinute = calCursor.getInt(2); //minutes from midnight
//    		      int endMinute = calCursor.getInt(3); //minutes from midnight
//    		      String title = calCursor.getString(4);
//    		      String description = calCursor.getString(5);
//    		      Log.d("com.example.pebble12","start Day:" + startDay + " start minute: " + startMinute + " title:" + title);
//    		      Event e = new Event(startDay,endDay,startMinute,endMinute,title,description);
//    		      if(MainActivity.events.contains(e)) {
//    		    	  Log.d("com.example.pebble12","Already have event:" + title);
//    		      } else {
//    		    	  Log.d("com.example.pebble12","Adding new event:" + title);
//    		    	  MainActivity.events.add(e);
//    		    	  //SEND DATA TO PEBBLE
//    		      }
//    		   }  while (calCursor.moveToNext()); 
//    		}   
    }
}
